class Solution {
public:
    vector<vector<int>> reconstructMatrix(int upper, int lower, vector<int>& colsum) {
        int n = colsum.size();
        vector<vector<int>> matrix(2, vector<int> (n));
        int a = upper, b = lower;
        for(int i = 0; i < n; i++){
            if(colsum[i] == 2){
                matrix[0][i] = 1;
                matrix[1][i] = 1;
                --upper; --lower;
            }else if(colsum[i] == 1){
                if(upper > lower) {
                    matrix[0][i] = 1;
                    --upper;
                }
                else if(lower > upper) {
                    matrix[1][i] = 1;
                    --lower;
                }else{
                    matrix[0][i] = 1;
                    --upper;
                }
            }
        }
        if(accumulate(matrix[0].begin(), matrix[0].end(), 0) != a) return {};
        else if(accumulate(matrix[1].begin(), matrix[1].end(), 0) != b) return {};
        else return matrix;
    }
};
