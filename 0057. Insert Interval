class Solution {
public:
    //Brute Force Approach
    //First, we insert that interval into the input vector and then apply the same procedure as merge intervals
    vector<vector<int>> insert(vector<vector<int>>& intervals, vector<int>& newInterval) {
        intervals.push_back(newInterval);
        sort(intervals.begin(), intervals.end());
        int n = intervals.size();
        vector<vector<int>> ans;
        vector<int> currInterval = intervals[0];
        for(int i = 1; i < n; i++){
            if(intervals[i][0] >= currInterval[0] && intervals[i][0] <= currInterval[1]){
                currInterval[0] = min(currInterval[0], intervals[i][0]);
                currInterval[1] = max(currInterval[1], intervals[i][1]);
            }else{
                ans.push_back(currInterval);
                currInterval = intervals[i];
            }
        }
        ans.push_back(currInterval);
        return ans;
    }
};
