class Solution {
public:
    vector<int> nextGreaterElements(vector<int>& nums) {
        //As the array is circular, the original array is appended in the beginning and the basic next greater element algo using stack is performed
        nums.insert(nums.begin(),nums.begin(),nums.end());
        int n2 = nums.size();
        stack<int> s;
        vector<int> ans;
        for(int i=n2-1;i>=0;i--){
            if(s.empty()){
                ans.push_back(-1);
            }else if(s.size()>0 && s.top()>nums[i]){
                ans.push_back(s.top());
            }else{
                while(s.size()>0 && s.top()<=nums[i]){
                    s.pop();
                }
                if(s.empty()){
                    ans.push_back(-1);
                }else if(s.size()>0 && s.top()>nums[i]){
                    ans.push_back(s.top());
                }
            }
            s.push(nums[i]);
        }
        reverse(ans.begin(),ans.end());
        //As the answer will be in the first half of the ans array(because nums size will be half of it)
        ans.erase(ans.begin()+n2/2,ans.end());
        return ans;
    }
};
