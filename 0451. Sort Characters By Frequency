class Solution {
public:
    //First get every character's frequency in a hashMap
    //Then build a max Heap using that Map(could be done with a min heap too)
    //Then for every freqency traverse through the priority queue and while it is not 0 keep inserting that character
    string frequencySort(string s) {
        unordered_map<char,int> freqMap;
        string ans;
        for(int  i = 0; i < s.length(); i++) freqMap[s[i]]++;
        priority_queue<pair<int,char>> pq;
        for(auto j:freqMap) pq.push({j.second,j.first});
        while(!pq.empty()){
            int temp = pq.top().first;
            while(temp--){
                ans += pq.top().second;
            }
            pq.pop();
        }
        return ans;
    }
};
