class Solution {
public:
    ListNode* mergeTwoLists(ListNode* head1,ListNode* head2){
    ListNode* head3 = new ListNode();
        ListNode* merged = head3;
    if(head1==NULL){
        return head2;
    }
    if(head2==NULL){
        return head1;
    }
    if(head1->val<head2->val){
        merged->val = head1->val;
        head1=head1->next;
    }else{
        merged->val = head2->val;
        head2=head2->next;
    }
        
    while(head1!=NULL && head2!=NULL){
        if(head1->val<head2->val){
            ListNode* newNode = new ListNode(head1->val);
            head3->next = newNode;
            head1=head1->next;
        }else{
            ListNode* newNode = new ListNode(head2->val);
            head3->next = newNode;
            head2=head2->next;
        }
        head3=head3->next;
    }
    while(head1!=NULL){
        ListNode* newNode = new ListNode(head1->val);
        head3->next = newNode;
        head3 = head3->next;
        head1 = head1->next;
    }
    while(head2!=NULL){
        ListNode* newNode = new ListNode(head2->val);
        head3->next = newNode;
        head3 = head3->next;
        head2 = head2->next;
    }
    return merged;
}
};
