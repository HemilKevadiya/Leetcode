class Solution {
public:
    int hammingDistance(int x, int y) {
        vector<int> bits(32);
        //Basically, find every bit that is differing in both the numbers
        for(int i=0;i<32;i++){
            //If a bit is set in x then first mark that bit as 1 and then if it also set in y then mark that bit as 0, as it is not differing 
            //and then calculate all the bits that are 1
            if(x&(1<<i)) bits[i] = 1;
            if(y&(1<<i)){
                if(bits[i]) bits[i] = 0;
                else bits[i] = 1;
            }
        }
        int sum = 0;
        for(int i=0;i<32;i++){
            if(bits[i]==1) sum++;
        }
        return sum;
    }
};
