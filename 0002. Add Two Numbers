class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        int carry=0;
        ListNode* sum = new ListNode();
        ListNode* temp = sum;
        if(l1==NULL){
            sum->val=l1->val;
        }else if(l2==NULL){
            sum->val = l2->val;
        }else{
            sum->val = l1->val+l2->val;
            if(sum->val>=10){
                sum->val-=10;
                carry=1;
            }
        }
        l1 = l1->next;
        l2 = l2->next;
        while(l1!=NULL || l2!=NULL){
            if(l1==NULL){
                int sum1 = l2->val+carry;
                if(sum1>=10){
                    sum1-=10;
                    carry=1;
                }else{
                    carry=0;
                }
                ListNode* newNode = new ListNode(sum1);
                sum->next = newNode;
                l2 = l2->next;
                sum = sum->next;
                continue;
            }
            if(l2==NULL){
                int sum1 = l1->val+carry;
                if(sum1>=10){
                    sum1-=10;
                    carry=1;
                }else{
                    carry=0;
                }
                ListNode* newNode = new ListNode(sum1);
                sum->next = newNode;
                l1 = l1->next;
                sum = sum->next;
                continue;
            }
            int sum1 = l1->val+l2->val+carry;
            if(sum1>=10){
                sum1-=10;
                carry=1;
            }else{
                carry=0;
            }
            ListNode* newNode = new ListNode(sum1);
            sum->next = newNode;
            l1 = l1->next;
            l2 = l2->next;
            sum = sum->next;
        }
        if(carry==1){
            ListNode* newNode = new ListNode(1);
            sum->next = newNode;
        }
        return temp;
    }
};
