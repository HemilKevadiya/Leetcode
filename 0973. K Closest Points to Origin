class Solution {
public:
    //The same approach as closest Top K closest elements but the element is a vector this time and the key is the distance between origin and the point
    int dist(vector<int>& p1){
        return (pow(p1[0] - 0, 2)) + pow(p1[1] - 0, 2);
    }
    vector<vector<int>> kClosest(vector<vector<int>>& points, int k) {
        priority_queue<pair<int,vector<int>>> pq;
        vector<vector<int>> ans;
        for(int i = 0; i < points.size(); i++){
            pq.push({dist(points[i]),points[i]});
            if(pq.size() > k) pq.pop();
        }
        while(!pq.empty()){
            ans.push_back(pq.top().second);
            pq.pop();
        }
        return ans;
    }
};
