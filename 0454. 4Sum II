class Solution {
public:
    int fourSumCount(vector<int>& nums1, vector<int>& nums2, vector<int>& nums3, vector<int>& nums4) {
        unordered_map<int, int> first, second;
        int n = nums1.size(), count = 0;
        for(int i = 0; i < n; i++){
            for(int j = 0; j < n; j++){
                first[nums1[i] + nums2[j]]++;
                second[-(nums3[i] + nums4[j])]++;
            }
        }
        for(auto j:first){
            int curr = j.first;
            if(second.find(curr) != second.end()){
                count += (first[curr] * second[curr]);
            }
        }
        return count;
    }
};
