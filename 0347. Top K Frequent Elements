class Solution {
public:
    vector<int> topKFrequent(vector<int>& nums, int k) {
        unordered_map<int,int> map;
        vector<int> ans;
        priority_queue<pair<int,int>, vector<pair<int,int>>, greater<pair<int,int>>> pq;
        for(int i = 0; i < nums.size(); i++) map[nums[i]]++;
        for(auto j:map){
            pq.push({j.second,j.first});
            if(pq.size() > k) pq.pop();
        }
        while(!pq.empty()){
            ans.emplace_back(pq.top().second);
            pq.pop();
        }
        return ans;
    }
};
