//KEY TAKEAWAY :- ALWAYS PASS A STRING BY REFERENCE IN RECURSIVE CODES
//At every index, if a character matches then we have 2 possibilites, either include it or not include it(because there might be other characters that are common)

class Solution {
    int solve(string& s, string& t, int i, int j, vector<vector<int>>& dp){
        if(j < 0){
            return 1;
        }
        
        if(i < 0){
            return 0;
        }
        
        if(dp[i][j] != -1) return dp[i][j];
        if(s[i] == t[j]){
            return dp[i][j] = (solve(s, t, i - 1, j - 1, dp) + solve(s, t, i - 1, j, dp));
        }else{
            return dp[i][j] = solve(s, t, i - 1, j, dp);
        }
    }
public:
    int numDistinct(string s, string t) {
        int m = s.length();
        int n = t.length();
        vector<double> prev(n + 1), curr(n + 1);
        
        prev[0] = curr[0] = 1;
        for(int i = 1; i <= m; i++){
            if(s[i - 1] == t[j - 1]){
                curr[j] = prev[j] + prev[j - 1];
            }else{
                curr[j] = prev[j];
            }
            for(auto j:prev) cout<<j<<" ";
            cout<<"\n";
        }
        return (int)prev[n];
        // return solve(s, t, m - 1, n - 1, dp);
    }
};
