class Solution {
public:
    bool solve(vector<vector<int>>& ans, vector<vector<int>>& matrix, int i, int j, int n){
        if(i == n - 1  && j == n - 1) {
            ans[i][j] = 1;
            return true;
        }
        
        if(matrix[i][j] == 0) return false;
        
        for(int jumps = 1; jumps <= matrix[i][j]; jumps++){
            if(jumps + j < n){
                ans[i][j] = 1;
                if(solve(ans, matrix, i, j + jumps, n)) return true;
                ans[i][j] = 0;
            }
            if(jumps + i < n){
                ans[i][j] = 1;
                if(solve(ans, matrix, i + jumps, j, n)) return true;
                ans[i][j] = 0;
            }
        }
        
        return false;
    }
	vector<vector<int>> ShortestDistance(vector<vector<int>>&matrix){
	    int n = matrix.size();
	    vector<vector<int>> ans(n, vector<int> (n, 0));
	    if(solve(ans, matrix, 0, 0, n)) return ans;
	    else return {{-1}};
	}

};
