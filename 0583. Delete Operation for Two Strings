//As, we can't insert any character, we need to find the longest common subsequence out of both the strings then remove every character except the common ones
//Find the LCS length and then retrun the answer using some math

class Solution {
public:
    int minDistance(string word1, string word2) {
        int m = word1.length();
        int n = word2.length();
        
        vector<int> prev(n + 1), curr(n + 1);
        for(int i = 1; i <= m; i++){
            for(int j = 1; j <= n; j++){
                if(word1[i - 1] == word2[j - 1]){
                    curr[j] = 1 + prev[j - 1];
                }else{
                    curr[j] = max(curr[j - 1], prev[j]);
                }
            }
            prev = curr;
        }
        int lcs = prev[n];
        int steps = (m - lcs) + (n - lcs);
        return steps;
    }
};
