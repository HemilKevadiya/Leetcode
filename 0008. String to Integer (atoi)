class Solution {
public:
    int myAtoi(string s) {
        int n = s.length();
        int sign = 1;
        long long ans = 0;
        int flag = 0;
        for(int i=0;i<n;i++){
            if(s[i]=='-' && ((s[i+1] - '0')>=0 && (s[i+1] - '0')<=9)){
                sign = 0;
                if(i>0 && s[i-1]!=' ') break;
                continue;
            }
            if(s[i]=='+' && ((s[i+1] - '0')>=0 && (s[i+1] - '0')<=9)){
                if(sign==0) break;
                sign = 1;
                if(i>0 && s[i-1]!=' ') break;
                continue;
            }
            if(sign==0 && -ans<(-pow(2,31))) return -pow(2,31);
            else if(sign==1 && ans>(pow(2,31)) - 1) return pow(2,31) - 1;
            if((s[i] - '0')>=0 && (s[i]- '0')<=9){
                if(flag==1 && s[i-1]==' '){
                    break;
                } 
                flag = 1;
                ans = ans*10 + (s[i] - '0');
            }else if(s[i]!=' '){
                break;
            }
        }
        if(sign==0) ans=-ans;
        if(ans<(-pow(2,31))) return -pow(2,31);
        else if(ans>(pow(2,31)) - 1) return pow(2,31) - 1;
        return ans;
    }
};
