//Traverse through the string
//Then put a static pointer for every group's beginning(j here)
//Then keep checking if the current character can be put into that group, if it can be put then delete that character from the array and as indexes will be changes don't increment the 'i'
//Now, if the characters don't match then assign the current frequency as characters after the group's first character and change the i and j accordingly

class Solution {
public:
    int compress(vector<char>& chars) {
        int n = chars.size();
        char curr = chars[0];
        int j = 0, i = 1, freq = 1;
        while(i < n){
            if(chars[i] == curr){
                chars.erase(chars.begin() + i);
                --n;
                freq++;
            }else{
                if(freq == 1){
                    j = i;
                    curr = chars[j];
                    i++;
                    continue;
                }
                string temp = to_string(freq);
                for(int k = 0; k < temp.length(); k++){
                    j++;
                    chars.insert(chars.begin() + j, temp[k]);
                    ++n;
                }
                j++;
                curr = chars[j];
                i = j + 1;
                freq = 1;
            }
        }
        if(freq != 1){
            string temp = to_string(freq);
            for(int i = 0; i < temp.length(); i++){
                chars.push_back(temp[i]);
            }
        }
        return chars.size();
    }
};
