class Solution {
public:
    int minBitFlips(int start, int goal) {
        string s1,s2;
        if(start==goal){
            return 0;
        }
        int count=0;
        while(start!=0){
            if(start%2==1){
                s1.push_back('1');
            }else{
                s1.push_back('0');
            }
            start/=2;
        }
        while(goal!=0){
            if(goal%2==1){
                s2.push_back('1');
            }else{
                s2.push_back('0');
            }
            goal/=2;
        }
        int m=s1.length(),n=s2.length();
        if(m!=n){
            int zeroes = abs(m-n);
            if (m>n){
                for(int i=0;i<zeroes;i++){
                    s2.push_back('0');
                }
            }else{
                for(int i=0;i<zeroes;i++){
                    s1.push_back('0');
                }
            }
        }
        reverse(s2.begin(),s2.end());
        reverse(s1.begin(),s1.end());
        cout<<s1<<endl<<s2<<endl;
        for(int i=0;i<s1.length();i++){
            if(s1[i]!=s2[i]){
                count++;
            }
        }
        return count;
    }
};
